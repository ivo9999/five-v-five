// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: riot.proto

package riot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChampionBySummonerAndLaneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SummonerId string `protobuf:"bytes,1,opt,name=summonerId,proto3" json:"summonerId,omitempty"`
	Lane       string `protobuf:"bytes,2,opt,name=lane,proto3" json:"lane,omitempty"`
}

func (x *ChampionBySummonerAndLaneRequest) Reset() {
	*x = ChampionBySummonerAndLaneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionBySummonerAndLaneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionBySummonerAndLaneRequest) ProtoMessage() {}

func (x *ChampionBySummonerAndLaneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionBySummonerAndLaneRequest.ProtoReflect.Descriptor instead.
func (*ChampionBySummonerAndLaneRequest) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{0}
}

func (x *ChampionBySummonerAndLaneRequest) GetSummonerId() string {
	if x != nil {
		return x.SummonerId
	}
	return ""
}

func (x *ChampionBySummonerAndLaneRequest) GetLane() string {
	if x != nil {
		return x.Lane
	}
	return ""
}

type ChampionBySummonerAndLaneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Champion string `protobuf:"bytes,1,opt,name=champion,proto3" json:"champion,omitempty"`
}

func (x *ChampionBySummonerAndLaneResponse) Reset() {
	*x = ChampionBySummonerAndLaneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionBySummonerAndLaneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionBySummonerAndLaneResponse) ProtoMessage() {}

func (x *ChampionBySummonerAndLaneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionBySummonerAndLaneResponse.ProtoReflect.Descriptor instead.
func (*ChampionBySummonerAndLaneResponse) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{1}
}

func (x *ChampionBySummonerAndLaneResponse) GetChampion() string {
	if x != nil {
		return x.Champion
	}
	return ""
}

// Request message for getting a summoner by name.
type SummonerByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tag  string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"` // Added field "tag" for the updated summoner identification requirements.
}

func (x *SummonerByNameRequest) Reset() {
	*x = SummonerByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummonerByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummonerByNameRequest) ProtoMessage() {}

func (x *SummonerByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummonerByNameRequest.ProtoReflect.Descriptor instead.
func (*SummonerByNameRequest) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{2}
}

func (x *SummonerByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SummonerByNameRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

// Response message containing detailed summoner info.
type SummonerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId     string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Puuid         string `protobuf:"bytes,3,opt,name=puuid,proto3" json:"puuid,omitempty"`
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Tag           string `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"` // Added field "tag" to be consistent with request.
	SummonerLevel int32  `protobuf:"varint,6,opt,name=summonerLevel,proto3" json:"summonerLevel,omitempty"`
}

func (x *SummonerResponse) Reset() {
	*x = SummonerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummonerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummonerResponse) ProtoMessage() {}

func (x *SummonerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummonerResponse.ProtoReflect.Descriptor instead.
func (*SummonerResponse) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{3}
}

func (x *SummonerResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SummonerResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *SummonerResponse) GetPuuid() string {
	if x != nil {
		return x.Puuid
	}
	return ""
}

func (x *SummonerResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SummonerResponse) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SummonerResponse) GetSummonerLevel() int32 {
	if x != nil {
		return x.SummonerLevel
	}
	return 0
}

// Request message for getting champion masteries by summoner ID.
type ChampionMasteriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SummonerId string `protobuf:"bytes,1,opt,name=summonerId,proto3" json:"summonerId,omitempty"`
}

func (x *ChampionMasteriesRequest) Reset() {
	*x = ChampionMasteriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionMasteriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionMasteriesRequest) ProtoMessage() {}

func (x *ChampionMasteriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionMasteriesRequest.ProtoReflect.Descriptor instead.
func (*ChampionMasteriesRequest) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{4}
}

func (x *ChampionMasteriesRequest) GetSummonerId() string {
	if x != nil {
		return x.SummonerId
	}
	return ""
}

// Response message containing a list of champion masteries.
type ChampionMasteriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Masteries []*ChampionMastery `protobuf:"bytes,1,rep,name=masteries,proto3" json:"masteries,omitempty"`
}

func (x *ChampionMasteriesResponse) Reset() {
	*x = ChampionMasteriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionMasteriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionMasteriesResponse) ProtoMessage() {}

func (x *ChampionMasteriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionMasteriesResponse.ProtoReflect.Descriptor instead.
func (*ChampionMasteriesResponse) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{5}
}

func (x *ChampionMasteriesResponse) GetMasteries() []*ChampionMastery {
	if x != nil {
		return x.Masteries
	}
	return nil
}

type ChampionMastery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Puuid                        string `protobuf:"bytes,1,opt,name=puuid,proto3" json:"puuid,omitempty"`
	ChampionId                   int64  `protobuf:"varint,2,opt,name=championId,proto3" json:"championId,omitempty"`
	ChampionLevel                int32  `protobuf:"varint,3,opt,name=championLevel,proto3" json:"championLevel,omitempty"`
	ChampionPoints               int32  `protobuf:"varint,4,opt,name=championPoints,proto3" json:"championPoints,omitempty"`
	LastPlayTime                 int64  `protobuf:"varint,5,opt,name=lastPlayTime,proto3" json:"lastPlayTime,omitempty"`
	ChampionPointsSinceLastLevel int32  `protobuf:"varint,6,opt,name=championPointsSinceLastLevel,proto3" json:"championPointsSinceLastLevel,omitempty"`
	ChampionPointsUntilNextLevel int32  `protobuf:"varint,7,opt,name=championPointsUntilNextLevel,proto3" json:"championPointsUntilNextLevel,omitempty"`
	TokensEarned                 int32  `protobuf:"varint,8,opt,name=tokensEarned,proto3" json:"tokensEarned,omitempty"`
	ChestGranted                 bool   `protobuf:"varint,9,opt,name=chestGranted,proto3" json:"chestGranted,omitempty"`
}

func (x *ChampionMastery) Reset() {
	*x = ChampionMastery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionMastery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionMastery) ProtoMessage() {}

func (x *ChampionMastery) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionMastery.ProtoReflect.Descriptor instead.
func (*ChampionMastery) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{6}
}

func (x *ChampionMastery) GetPuuid() string {
	if x != nil {
		return x.Puuid
	}
	return ""
}

func (x *ChampionMastery) GetChampionId() int64 {
	if x != nil {
		return x.ChampionId
	}
	return 0
}

func (x *ChampionMastery) GetChampionLevel() int32 {
	if x != nil {
		return x.ChampionLevel
	}
	return 0
}

func (x *ChampionMastery) GetChampionPoints() int32 {
	if x != nil {
		return x.ChampionPoints
	}
	return 0
}

func (x *ChampionMastery) GetLastPlayTime() int64 {
	if x != nil {
		return x.LastPlayTime
	}
	return 0
}

func (x *ChampionMastery) GetChampionPointsSinceLastLevel() int32 {
	if x != nil {
		return x.ChampionPointsSinceLastLevel
	}
	return 0
}

func (x *ChampionMastery) GetChampionPointsUntilNextLevel() int32 {
	if x != nil {
		return x.ChampionPointsUntilNextLevel
	}
	return 0
}

func (x *ChampionMastery) GetTokensEarned() int32 {
	if x != nil {
		return x.TokensEarned
	}
	return 0
}

func (x *ChampionMastery) GetChestGranted() bool {
	if x != nil {
		return x.ChestGranted
	}
	return false
}

// Request message for getting league entries by summoner ID.
type LeagueEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SummonerId string `protobuf:"bytes,1,opt,name=summonerId,proto3" json:"summonerId,omitempty"`
}

func (x *LeagueEntriesRequest) Reset() {
	*x = LeagueEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueEntriesRequest) ProtoMessage() {}

func (x *LeagueEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueEntriesRequest.ProtoReflect.Descriptor instead.
func (*LeagueEntriesRequest) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{7}
}

func (x *LeagueEntriesRequest) GetSummonerId() string {
	if x != nil {
		return x.SummonerId
	}
	return ""
}

// Response message containing a list of league entries.
type LeagueEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*LeagueEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *LeagueEntriesResponse) Reset() {
	*x = LeagueEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueEntriesResponse) ProtoMessage() {}

func (x *LeagueEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueEntriesResponse.ProtoReflect.Descriptor instead.
func (*LeagueEntriesResponse) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{8}
}

func (x *LeagueEntriesResponse) GetEntries() []*LeagueEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type LeagueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueId     string `protobuf:"bytes,1,opt,name=leagueId,proto3" json:"leagueId,omitempty"`
	QueueType    string `protobuf:"bytes,2,opt,name=queueType,proto3" json:"queueType,omitempty"`
	Tier         string `protobuf:"bytes,3,opt,name=tier,proto3" json:"tier,omitempty"`
	Rank         string `protobuf:"bytes,4,opt,name=rank,proto3" json:"rank,omitempty"`
	LeaguePoints int32  `protobuf:"varint,5,opt,name=leaguePoints,proto3" json:"leaguePoints,omitempty"`
	Wins         int32  `protobuf:"varint,6,opt,name=wins,proto3" json:"wins,omitempty"`
	Losses       int32  `protobuf:"varint,7,opt,name=losses,proto3" json:"losses,omitempty"`
	Veteran      bool   `protobuf:"varint,8,opt,name=veteran,proto3" json:"veteran,omitempty"`
	Inactive     bool   `protobuf:"varint,9,opt,name=inactive,proto3" json:"inactive,omitempty"`
	FreshBlood   bool   `protobuf:"varint,10,opt,name=freshBlood,proto3" json:"freshBlood,omitempty"`
	HotStreak    bool   `protobuf:"varint,11,opt,name=hotStreak,proto3" json:"hotStreak,omitempty"`
}

func (x *LeagueEntry) Reset() {
	*x = LeagueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueEntry) ProtoMessage() {}

func (x *LeagueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueEntry.ProtoReflect.Descriptor instead.
func (*LeagueEntry) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{9}
}

func (x *LeagueEntry) GetLeagueId() string {
	if x != nil {
		return x.LeagueId
	}
	return ""
}

func (x *LeagueEntry) GetQueueType() string {
	if x != nil {
		return x.QueueType
	}
	return ""
}

func (x *LeagueEntry) GetTier() string {
	if x != nil {
		return x.Tier
	}
	return ""
}

func (x *LeagueEntry) GetRank() string {
	if x != nil {
		return x.Rank
	}
	return ""
}

func (x *LeagueEntry) GetLeaguePoints() int32 {
	if x != nil {
		return x.LeaguePoints
	}
	return 0
}

func (x *LeagueEntry) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *LeagueEntry) GetLosses() int32 {
	if x != nil {
		return x.Losses
	}
	return 0
}

func (x *LeagueEntry) GetVeteran() bool {
	if x != nil {
		return x.Veteran
	}
	return false
}

func (x *LeagueEntry) GetInactive() bool {
	if x != nil {
		return x.Inactive
	}
	return false
}

func (x *LeagueEntry) GetFreshBlood() bool {
	if x != nil {
		return x.FreshBlood
	}
	return false
}

func (x *LeagueEntry) GetHotStreak() bool {
	if x != nil {
		return x.HotStreak
	}
	return false
}

type SummonerLane struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SummonerName string `protobuf:"bytes,1,opt,name=summonerName,proto3" json:"summonerName,omitempty"`
	Lane         string `protobuf:"bytes,2,opt,name=lane,proto3" json:"lane,omitempty"`
}

func (x *SummonerLane) Reset() {
	*x = SummonerLane{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummonerLane) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummonerLane) ProtoMessage() {}

func (x *SummonerLane) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummonerLane.ProtoReflect.Descriptor instead.
func (*SummonerLane) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{10}
}

func (x *SummonerLane) GetSummonerName() string {
	if x != nil {
		return x.SummonerName
	}
	return ""
}

func (x *SummonerLane) GetLane() string {
	if x != nil {
		return x.Lane
	}
	return ""
}

type SummonerChampion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SummonerName   string `protobuf:"bytes,1,opt,name=summonerName,proto3" json:"summonerName,omitempty"`
	Lane           string `protobuf:"bytes,2,opt,name=lane,proto3" json:"lane,omitempty"`
	ChampionName   string `protobuf:"bytes,3,opt,name=championName,proto3" json:"championName,omitempty"`
	ChampionPoints int32  `protobuf:"varint,4,opt,name=championPoints,proto3" json:"championPoints,omitempty"`
}

func (x *SummonerChampion) Reset() {
	*x = SummonerChampion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummonerChampion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummonerChampion) ProtoMessage() {}

func (x *SummonerChampion) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummonerChampion.ProtoReflect.Descriptor instead.
func (*SummonerChampion) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{11}
}

func (x *SummonerChampion) GetSummonerName() string {
	if x != nil {
		return x.SummonerName
	}
	return ""
}

func (x *SummonerChampion) GetLane() string {
	if x != nil {
		return x.Lane
	}
	return ""
}

func (x *SummonerChampion) GetChampionName() string {
	if x != nil {
		return x.ChampionName
	}
	return ""
}

func (x *SummonerChampion) GetChampionPoints() int32 {
	if x != nil {
		return x.ChampionPoints
	}
	return 0
}

type GetChampionsByTeamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team1 []*SummonerLane `protobuf:"bytes,1,rep,name=team1,proto3" json:"team1,omitempty"`
	Team2 []*SummonerLane `protobuf:"bytes,2,rep,name=team2,proto3" json:"team2,omitempty"`
}

func (x *GetChampionsByTeamsRequest) Reset() {
	*x = GetChampionsByTeamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChampionsByTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionsByTeamsRequest) ProtoMessage() {}

func (x *GetChampionsByTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionsByTeamsRequest.ProtoReflect.Descriptor instead.
func (*GetChampionsByTeamsRequest) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{12}
}

func (x *GetChampionsByTeamsRequest) GetTeam1() []*SummonerLane {
	if x != nil {
		return x.Team1
	}
	return nil
}

func (x *GetChampionsByTeamsRequest) GetTeam2() []*SummonerLane {
	if x != nil {
		return x.Team2
	}
	return nil
}

type GetChampionsByTeamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team1Champions []*SummonerChampion `protobuf:"bytes,1,rep,name=team1Champions,proto3" json:"team1Champions,omitempty"`
	Team2Champions []*SummonerChampion `protobuf:"bytes,2,rep,name=team2Champions,proto3" json:"team2Champions,omitempty"`
}

func (x *GetChampionsByTeamsResponse) Reset() {
	*x = GetChampionsByTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_riot_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChampionsByTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChampionsByTeamsResponse) ProtoMessage() {}

func (x *GetChampionsByTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_riot_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChampionsByTeamsResponse.ProtoReflect.Descriptor instead.
func (*GetChampionsByTeamsResponse) Descriptor() ([]byte, []int) {
	return file_riot_proto_rawDescGZIP(), []int{13}
}

func (x *GetChampionsByTeamsResponse) GetTeam1Champions() []*SummonerChampion {
	if x != nil {
		return x.Team1Champions
	}
	return nil
}

func (x *GetChampionsByTeamsResponse) GetTeam2Champions() []*SummonerChampion {
	if x != nil {
		return x.Team2Champions
	}
	return nil
}

var File_riot_proto protoreflect.FileDescriptor

var file_riot_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x69,
	0x6f, 0x74, 0x22, 0x56, 0x0a, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x61, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x6d, 0x6d,
	0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x65, 0x22, 0x3f, 0x0a, 0x21, 0x43, 0x68,
	0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72,
	0x41, 0x6e, 0x64, 0x4c, 0x61, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x15, 0x53,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x53,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x6d,
	0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x3a, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x19, 0x43,
	0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x69,
	0x6f, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x79, 0x52, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x89, 0x03,
	0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6d, 0x70,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x68, 0x61,
	0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6d, 0x70,
	0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x1c, 0x63, 0x68, 0x61,
	0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65,
	0x4c, 0x61, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x1c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53,
	0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x42, 0x0a,
	0x1c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x55,
	0x6e, 0x74, 0x69, 0x6c, 0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x1c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x61, 0x72, 0x6e, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45,
	0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x73, 0x74, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x22, 0x36, 0x0a, 0x14, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x44, 0x0a, 0x15, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x69,
	0x6f, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xb3, 0x02, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69, 0x6e,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x74,
	0x65, 0x72, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x65, 0x74, 0x65,
	0x72, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x73, 0x68, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x72, 0x65, 0x73, 0x68, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x22, 0x46, 0x0a,
	0x0c, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75,
	0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x70,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05,
	0x74, 0x65, 0x61, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x69,
	0x6f, 0x74, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x65, 0x52,
	0x05, 0x74, 0x65, 0x61, 0x6d, 0x31, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x32, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x53, 0x75, 0x6d,
	0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x65, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x32,
	0x22, 0x9d, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0e, 0x74, 0x65, 0x61, 0x6d, 0x31, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e,
	0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x74, 0x65, 0x61, 0x6d, 0x31, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x3e, 0x0a, 0x0e, 0x74, 0x65, 0x61, 0x6d, 0x32, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e,
	0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x74, 0x65, 0x61, 0x6d, 0x32, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73,
	0x32, 0xfe, 0x05, 0x0a, 0x0e, 0x52, 0x69, 0x6f, 0x74, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e,
	0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e,
	0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x53, 0x75, 0x6d,
	0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x63, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65,
	0x72, 0x12, 0x1e, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e,
	0x65, 0x72, 0x12, 0x1a, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x53, 0x75, 0x6d,
	0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x21,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65,
	0x72, 0x12, 0x1e, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x53, 0x75, 0x6d,
	0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x71, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x61, 0x6e, 0x65,
	0x12, 0x26, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x61, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x69, 0x6f, 0x74, 0x2e,
	0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e,
	0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x61, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x2e, 0x72, 0x69, 0x6f,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72,
	0x69, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x07, 0x5a, 0x05, 0x2f, 0x72, 0x69, 0x6f, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_riot_proto_rawDescOnce sync.Once
	file_riot_proto_rawDescData = file_riot_proto_rawDesc
)

func file_riot_proto_rawDescGZIP() []byte {
	file_riot_proto_rawDescOnce.Do(func() {
		file_riot_proto_rawDescData = protoimpl.X.CompressGZIP(file_riot_proto_rawDescData)
	})
	return file_riot_proto_rawDescData
}

var file_riot_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_riot_proto_goTypes = []interface{}{
	(*ChampionBySummonerAndLaneRequest)(nil),  // 0: riot.ChampionBySummonerAndLaneRequest
	(*ChampionBySummonerAndLaneResponse)(nil), // 1: riot.ChampionBySummonerAndLaneResponse
	(*SummonerByNameRequest)(nil),             // 2: riot.SummonerByNameRequest
	(*SummonerResponse)(nil),                  // 3: riot.SummonerResponse
	(*ChampionMasteriesRequest)(nil),          // 4: riot.ChampionMasteriesRequest
	(*ChampionMasteriesResponse)(nil),         // 5: riot.ChampionMasteriesResponse
	(*ChampionMastery)(nil),                   // 6: riot.ChampionMastery
	(*LeagueEntriesRequest)(nil),              // 7: riot.LeagueEntriesRequest
	(*LeagueEntriesResponse)(nil),             // 8: riot.LeagueEntriesResponse
	(*LeagueEntry)(nil),                       // 9: riot.LeagueEntry
	(*SummonerLane)(nil),                      // 10: riot.SummonerLane
	(*SummonerChampion)(nil),                  // 11: riot.SummonerChampion
	(*GetChampionsByTeamsRequest)(nil),        // 12: riot.GetChampionsByTeamsRequest
	(*GetChampionsByTeamsResponse)(nil),       // 13: riot.GetChampionsByTeamsResponse
}
var file_riot_proto_depIdxs = []int32{
	6,  // 0: riot.ChampionMasteriesResponse.masteries:type_name -> riot.ChampionMastery
	9,  // 1: riot.LeagueEntriesResponse.entries:type_name -> riot.LeagueEntry
	10, // 2: riot.GetChampionsByTeamsRequest.team1:type_name -> riot.SummonerLane
	10, // 3: riot.GetChampionsByTeamsRequest.team2:type_name -> riot.SummonerLane
	11, // 4: riot.GetChampionsByTeamsResponse.team1Champions:type_name -> riot.SummonerChampion
	11, // 5: riot.GetChampionsByTeamsResponse.team2Champions:type_name -> riot.SummonerChampion
	2,  // 6: riot.RiotAPIService.GetSummonerByName:input_type -> riot.SummonerByNameRequest
	4,  // 7: riot.RiotAPIService.GetChampionMasteriesBySummoner:input_type -> riot.ChampionMasteriesRequest
	7,  // 8: riot.RiotAPIService.GetLeagueEntriesBySummoner:input_type -> riot.LeagueEntriesRequest
	2,  // 9: riot.RiotAPIService.UpdateSummonerByName:input_type -> riot.SummonerByNameRequest
	4,  // 10: riot.RiotAPIService.UpdateChampionMasteriesBySummoner:input_type -> riot.ChampionMasteriesRequest
	7,  // 11: riot.RiotAPIService.UpdateLeagueEntriesBySummoner:input_type -> riot.LeagueEntriesRequest
	0,  // 12: riot.RiotAPIService.GetChampionBySummonerAndLane:input_type -> riot.ChampionBySummonerAndLaneRequest
	12, // 13: riot.RiotAPIService.GetChampionsByTeams:input_type -> riot.GetChampionsByTeamsRequest
	3,  // 14: riot.RiotAPIService.GetSummonerByName:output_type -> riot.SummonerResponse
	5,  // 15: riot.RiotAPIService.GetChampionMasteriesBySummoner:output_type -> riot.ChampionMasteriesResponse
	8,  // 16: riot.RiotAPIService.GetLeagueEntriesBySummoner:output_type -> riot.LeagueEntriesResponse
	3,  // 17: riot.RiotAPIService.UpdateSummonerByName:output_type -> riot.SummonerResponse
	5,  // 18: riot.RiotAPIService.UpdateChampionMasteriesBySummoner:output_type -> riot.ChampionMasteriesResponse
	8,  // 19: riot.RiotAPIService.UpdateLeagueEntriesBySummoner:output_type -> riot.LeagueEntriesResponse
	1,  // 20: riot.RiotAPIService.GetChampionBySummonerAndLane:output_type -> riot.ChampionBySummonerAndLaneResponse
	13, // 21: riot.RiotAPIService.GetChampionsByTeams:output_type -> riot.GetChampionsByTeamsResponse
	14, // [14:22] is the sub-list for method output_type
	6,  // [6:14] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_riot_proto_init() }
func file_riot_proto_init() {
	if File_riot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_riot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionBySummonerAndLaneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionBySummonerAndLaneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummonerByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummonerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionMasteriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionMasteriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionMastery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeagueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummonerLane); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummonerChampion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChampionsByTeamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_riot_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChampionsByTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_riot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_riot_proto_goTypes,
		DependencyIndexes: file_riot_proto_depIdxs,
		MessageInfos:      file_riot_proto_msgTypes,
	}.Build()
	File_riot_proto = out.File
	file_riot_proto_rawDesc = nil
	file_riot_proto_goTypes = nil
	file_riot_proto_depIdxs = nil
}
