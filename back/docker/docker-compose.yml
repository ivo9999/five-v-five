
version: '3.1'
services:
  riot-service:
    build:
      context: ./../riot-api/
      dockerfile: ./../riot-api/riot-service.dockerfile
    restart: always
    ports:
      - 8082:8080
      - 50001:50001
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - riot-postgres
    environment:
      RIOT_API_KEY: ${RIOT_API_KEY}

  game-service:
    build:
      context: ./../game-management/
      dockerfile: ./../game-management/game-service.dockerfile
    restart: always
    ports:
      - 8080:8080
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - game-postgres

  user-service:
    build:
      context: ./../user-management/
      dockerfile: ./../user-management/user-service.dockerfile
    restart: always
    ports:
      - 8081:8080
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - user-postgres

  user-postgres:
    image: 'postgres:14.2'
    ports:
      - "5434:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - ./user-data:/var/lib/postgresql/data

  game-postgres:
    image: 'postgres:14.2'
    ports:
      - "5433:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - ./game-data:/var/lib/postgresql/data

  riot-postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - ./riot-data:/var/lib/postgresql/data

networks:
  default:
    driver: bridge

volumes:
  game-data:  
    driver: local
  user-data:  
    driver: local
  riot-data:  
    driver: local
